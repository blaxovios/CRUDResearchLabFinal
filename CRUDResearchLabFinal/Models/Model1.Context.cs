//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUDResearchLabFinal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ResearchLabEntities : DbContext
    {
        public ResearchLabEntities()
            : base("name=ResearchLabEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<LabAnnouncement> LabAnnouncements { get; set; }
        public virtual DbSet<LabMember> LabMembers { get; set; }
        public virtual DbSet<MemberCategory> MemberCategories { get; set; }
        public virtual DbSet<PublicationMedia> PublicationMedias { get; set; }
        public virtual DbSet<Publication> Publications { get; set; }
        public virtual DbSet<ResearchProject> ResearchProjects { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spCoursesCreateOrUpdate(Nullable<int> coursesID, string undergraduate, string postgraduate, Nullable<int> labMembersID, Nullable<int> labAnnouncementsID)
        {
            var coursesIDParameter = coursesID.HasValue ?
                new ObjectParameter("CoursesID", coursesID) :
                new ObjectParameter("CoursesID", typeof(int));
    
            var undergraduateParameter = undergraduate != null ?
                new ObjectParameter("Undergraduate", undergraduate) :
                new ObjectParameter("Undergraduate", typeof(string));
    
            var postgraduateParameter = postgraduate != null ?
                new ObjectParameter("Postgraduate", postgraduate) :
                new ObjectParameter("Postgraduate", typeof(string));
    
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            var labAnnouncementsIDParameter = labAnnouncementsID.HasValue ?
                new ObjectParameter("LabAnnouncementsID", labAnnouncementsID) :
                new ObjectParameter("LabAnnouncementsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCoursesCreateOrUpdate", coursesIDParameter, undergraduateParameter, postgraduateParameter, labMembersIDParameter, labAnnouncementsIDParameter);
        }
    
        public virtual int spCoursesDeleteByID(Nullable<int> coursesID)
        {
            var coursesIDParameter = coursesID.HasValue ?
                new ObjectParameter("CoursesID", coursesID) :
                new ObjectParameter("CoursesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCoursesDeleteByID", coursesIDParameter);
        }
    
        public virtual ObjectResult<spCoursesViewAll_Result> spCoursesViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCoursesViewAll_Result>("spCoursesViewAll");
        }
    
        public virtual ObjectResult<spCoursesViewByID_Result> spCoursesViewByID(Nullable<int> coursesID)
        {
            var coursesIDParameter = coursesID.HasValue ?
                new ObjectParameter("CoursesID", coursesID) :
                new ObjectParameter("CoursesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCoursesViewByID_Result>("spCoursesViewByID", coursesIDParameter);
        }
    
        public virtual int spLabAnnouncementsCreateOrUpdate(Nullable<int> labAnnouncementsID, Nullable<int> labMembersID, Nullable<int> publicationMediaID, Nullable<int> publicationsID, Nullable<int> researchProjectsID, Nullable<int> coursesID, string announcement)
        {
            var labAnnouncementsIDParameter = labAnnouncementsID.HasValue ?
                new ObjectParameter("LabAnnouncementsID", labAnnouncementsID) :
                new ObjectParameter("LabAnnouncementsID", typeof(int));
    
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            var publicationMediaIDParameter = publicationMediaID.HasValue ?
                new ObjectParameter("PublicationMediaID", publicationMediaID) :
                new ObjectParameter("PublicationMediaID", typeof(int));
    
            var publicationsIDParameter = publicationsID.HasValue ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(int));
    
            var researchProjectsIDParameter = researchProjectsID.HasValue ?
                new ObjectParameter("ResearchProjectsID", researchProjectsID) :
                new ObjectParameter("ResearchProjectsID", typeof(int));
    
            var coursesIDParameter = coursesID.HasValue ?
                new ObjectParameter("CoursesID", coursesID) :
                new ObjectParameter("CoursesID", typeof(int));
    
            var announcementParameter = announcement != null ?
                new ObjectParameter("Announcement", announcement) :
                new ObjectParameter("Announcement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLabAnnouncementsCreateOrUpdate", labAnnouncementsIDParameter, labMembersIDParameter, publicationMediaIDParameter, publicationsIDParameter, researchProjectsIDParameter, coursesIDParameter, announcementParameter);
        }
    
        public virtual int spLabAnnouncementsDeleteByID(Nullable<int> labAnnouncementsID)
        {
            var labAnnouncementsIDParameter = labAnnouncementsID.HasValue ?
                new ObjectParameter("LabAnnouncementsID", labAnnouncementsID) :
                new ObjectParameter("LabAnnouncementsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLabAnnouncementsDeleteByID", labAnnouncementsIDParameter);
        }
    
        public virtual ObjectResult<spLabAnnouncementsViewAll_Result> spLabAnnouncementsViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLabAnnouncementsViewAll_Result>("spLabAnnouncementsViewAll");
        }
    
        public virtual ObjectResult<spLabAnnouncementsViewByID_Result> spLabAnnouncementsViewByID(Nullable<int> labAnnouncementsID)
        {
            var labAnnouncementsIDParameter = labAnnouncementsID.HasValue ?
                new ObjectParameter("LabAnnouncementsID", labAnnouncementsID) :
                new ObjectParameter("LabAnnouncementsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLabAnnouncementsViewByID_Result>("spLabAnnouncementsViewByID", labAnnouncementsIDParameter);
        }
    
        public virtual int spLabMembersCreateOrUpdate(Nullable<int> labMembersID, string firstName, string surname, string webPage, string email, string shortCV, Nullable<int> memberCategoriesID)
        {
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("WebPage", webPage) :
                new ObjectParameter("WebPage", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var shortCVParameter = shortCV != null ?
                new ObjectParameter("ShortCV", shortCV) :
                new ObjectParameter("ShortCV", typeof(string));
    
            var memberCategoriesIDParameter = memberCategoriesID.HasValue ?
                new ObjectParameter("MemberCategoriesID", memberCategoriesID) :
                new ObjectParameter("MemberCategoriesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLabMembersCreateOrUpdate", labMembersIDParameter, firstNameParameter, surnameParameter, webPageParameter, emailParameter, shortCVParameter, memberCategoriesIDParameter);
        }
    
        public virtual int spLabMembersDeleteByID(Nullable<int> labMembersID)
        {
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLabMembersDeleteByID", labMembersIDParameter);
        }
    
        public virtual ObjectResult<spLabMembersViewAll_Result> spLabMembersViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLabMembersViewAll_Result>("spLabMembersViewAll");
        }
    
        public virtual ObjectResult<spLabMembersViewByID_Result> spLabMembersViewByID(Nullable<int> labMembersID)
        {
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLabMembersViewByID_Result>("spLabMembersViewByID", labMembersIDParameter);
        }
    
        public virtual ObjectResult<spMemberActivityReportPerYear_Result> spMemberActivityReportPerYear(string labMembersID)
        {
            var labMembersIDParameter = labMembersID != null ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberActivityReportPerYear_Result>("spMemberActivityReportPerYear", labMembersIDParameter);
        }
    
        public virtual int spMemberCategoriesCreateOrUpdate(Nullable<int> memberCategoriesID, string categoryName, string descrptn)
        {
            var memberCategoriesIDParameter = memberCategoriesID.HasValue ?
                new ObjectParameter("MemberCategoriesID", memberCategoriesID) :
                new ObjectParameter("MemberCategoriesID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descrptnParameter = descrptn != null ?
                new ObjectParameter("Descrptn", descrptn) :
                new ObjectParameter("Descrptn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMemberCategoriesCreateOrUpdate", memberCategoriesIDParameter, categoryNameParameter, descrptnParameter);
        }
    
        public virtual int spMemberCategoriesDeleteByID(Nullable<int> memberCategoriesID)
        {
            var memberCategoriesIDParameter = memberCategoriesID.HasValue ?
                new ObjectParameter("MemberCategoriesID", memberCategoriesID) :
                new ObjectParameter("MemberCategoriesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMemberCategoriesDeleteByID", memberCategoriesIDParameter);
        }
    
        public virtual ObjectResult<spMemberCategoriesViewAll_Result> spMemberCategoriesViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberCategoriesViewAll_Result>("spMemberCategoriesViewAll");
        }
    
        public virtual ObjectResult<spMemberCategoriesViewByID_Result> spMemberCategoriesViewByID(Nullable<int> memberCategoriesID)
        {
            var memberCategoriesIDParameter = memberCategoriesID.HasValue ?
                new ObjectParameter("MemberCategoriesID", memberCategoriesID) :
                new ObjectParameter("MemberCategoriesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberCategoriesViewByID_Result>("spMemberCategoriesViewByID", memberCategoriesIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spMemberPublicationPerCongress(string labMembersID)
        {
            var labMembersIDParameter = labMembersID != null ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spMemberPublicationPerCongress", labMembersIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spMemberPublicationPerMagazine(string labMembersID)
        {
            var labMembersIDParameter = labMembersID != null ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spMemberPublicationPerMagazine", labMembersIDParameter);
        }
    
        public virtual ObjectResult<spMemberPublicationPerPublicationType_Result> spMemberPublicationPerPublicationType(string labMembersID)
        {
            var labMembersIDParameter = labMembersID != null ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberPublicationPerPublicationType_Result>("spMemberPublicationPerPublicationType", labMembersIDParameter);
        }
    
        public virtual ObjectResult<spMemberPublicationReportPerYearReversed_Result> spMemberPublicationReportPerYearReversed(string labMembersID)
        {
            var labMembersIDParameter = labMembersID != null ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberPublicationReportPerYearReversed_Result>("spMemberPublicationReportPerYearReversed", labMembersIDParameter);
        }
    
        public virtual ObjectResult<spMemberWithSameNumberOfPublications_Result> spMemberWithSameNumberOfPublications(string publicationType)
        {
            var publicationTypeParameter = publicationType != null ?
                new ObjectParameter("PublicationType", publicationType) :
                new ObjectParameter("PublicationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberWithSameNumberOfPublications_Result>("spMemberWithSameNumberOfPublications", publicationTypeParameter);
        }
    
        public virtual ObjectResult<spMemberWithSamePublications_Result> spMemberWithSamePublications(string publicationsID)
        {
            var publicationsIDParameter = publicationsID != null ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMemberWithSamePublications_Result>("spMemberWithSamePublications", publicationsIDParameter);
        }
    
        public virtual int spPublicationMediaCreateOrUpdate(Nullable<int> publicationMediaID, string publicationType)
        {
            var publicationMediaIDParameter = publicationMediaID.HasValue ?
                new ObjectParameter("PublicationMediaID", publicationMediaID) :
                new ObjectParameter("PublicationMediaID", typeof(int));
    
            var publicationTypeParameter = publicationType != null ?
                new ObjectParameter("PublicationType", publicationType) :
                new ObjectParameter("PublicationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPublicationMediaCreateOrUpdate", publicationMediaIDParameter, publicationTypeParameter);
        }
    
        public virtual int spPublicationMediaDeleteByID(Nullable<int> publicationMediaID)
        {
            var publicationMediaIDParameter = publicationMediaID.HasValue ?
                new ObjectParameter("PublicationMediaID", publicationMediaID) :
                new ObjectParameter("PublicationMediaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPublicationMediaDeleteByID", publicationMediaIDParameter);
        }
    
        public virtual ObjectResult<spPublicationMediaViewAll_Result> spPublicationMediaViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPublicationMediaViewAll_Result>("spPublicationMediaViewAll");
        }
    
        public virtual ObjectResult<spPublicationMediaViewByID_Result> spPublicationMediaViewByID(Nullable<int> publicationMediaID)
        {
            var publicationMediaIDParameter = publicationMediaID.HasValue ?
                new ObjectParameter("PublicationMediaID", publicationMediaID) :
                new ObjectParameter("PublicationMediaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPublicationMediaViewByID_Result>("spPublicationMediaViewByID", publicationMediaIDParameter);
        }
    
        public virtual int spPublicationsCreateOrUpdate(Nullable<int> publicationsID, string thematicUnit, Nullable<int> labMembersID, Nullable<int> publicationYear, Nullable<int> publicationMediaID, Nullable<int> researchProjectsID, Nullable<int> labAnnouncementsID)
        {
            var publicationsIDParameter = publicationsID.HasValue ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(int));
    
            var thematicUnitParameter = thematicUnit != null ?
                new ObjectParameter("ThematicUnit", thematicUnit) :
                new ObjectParameter("ThematicUnit", typeof(string));
    
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            var publicationYearParameter = publicationYear.HasValue ?
                new ObjectParameter("PublicationYear", publicationYear) :
                new ObjectParameter("PublicationYear", typeof(int));
    
            var publicationMediaIDParameter = publicationMediaID.HasValue ?
                new ObjectParameter("PublicationMediaID", publicationMediaID) :
                new ObjectParameter("PublicationMediaID", typeof(int));
    
            var researchProjectsIDParameter = researchProjectsID.HasValue ?
                new ObjectParameter("ResearchProjectsID", researchProjectsID) :
                new ObjectParameter("ResearchProjectsID", typeof(int));
    
            var labAnnouncementsIDParameter = labAnnouncementsID.HasValue ?
                new ObjectParameter("LabAnnouncementsID", labAnnouncementsID) :
                new ObjectParameter("LabAnnouncementsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPublicationsCreateOrUpdate", publicationsIDParameter, thematicUnitParameter, labMembersIDParameter, publicationYearParameter, publicationMediaIDParameter, researchProjectsIDParameter, labAnnouncementsIDParameter);
        }
    
        public virtual int spPublicationsDeleteByID(Nullable<int> publicationsID)
        {
            var publicationsIDParameter = publicationsID.HasValue ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPublicationsDeleteByID", publicationsIDParameter);
        }
    
        public virtual ObjectResult<spPublicationsViewAll_Result> spPublicationsViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPublicationsViewAll_Result>("spPublicationsViewAll");
        }
    
        public virtual ObjectResult<spPublicationsViewByID_Result> spPublicationsViewByID(Nullable<int> publicationsID)
        {
            var publicationsIDParameter = publicationsID.HasValue ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPublicationsViewByID_Result>("spPublicationsViewByID", publicationsIDParameter);
        }
    
        public virtual int spResearchProjectsCreateOrUpdate(Nullable<int> researchProjectsID, string running, string completed, Nullable<int> labMembersID, Nullable<int> publicationsID, string descrptn)
        {
            var researchProjectsIDParameter = researchProjectsID.HasValue ?
                new ObjectParameter("ResearchProjectsID", researchProjectsID) :
                new ObjectParameter("ResearchProjectsID", typeof(int));
    
            var runningParameter = running != null ?
                new ObjectParameter("Running", running) :
                new ObjectParameter("Running", typeof(string));
    
            var completedParameter = completed != null ?
                new ObjectParameter("Completed", completed) :
                new ObjectParameter("Completed", typeof(string));
    
            var labMembersIDParameter = labMembersID.HasValue ?
                new ObjectParameter("LabMembersID", labMembersID) :
                new ObjectParameter("LabMembersID", typeof(int));
    
            var publicationsIDParameter = publicationsID.HasValue ?
                new ObjectParameter("PublicationsID", publicationsID) :
                new ObjectParameter("PublicationsID", typeof(int));
    
            var descrptnParameter = descrptn != null ?
                new ObjectParameter("Descrptn", descrptn) :
                new ObjectParameter("Descrptn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spResearchProjectsCreateOrUpdate", researchProjectsIDParameter, runningParameter, completedParameter, labMembersIDParameter, publicationsIDParameter, descrptnParameter);
        }
    
        public virtual int spResearchprojectsDeleteByID(Nullable<int> researchprojectsID)
        {
            var researchprojectsIDParameter = researchprojectsID.HasValue ?
                new ObjectParameter("ResearchprojectsID", researchprojectsID) :
                new ObjectParameter("ResearchprojectsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spResearchprojectsDeleteByID", researchprojectsIDParameter);
        }
    
        public virtual ObjectResult<spResearchprojectsViewAll_Result> spResearchprojectsViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spResearchprojectsViewAll_Result>("spResearchprojectsViewAll");
        }
    
        public virtual ObjectResult<spResearchProjectsViewByID_Result> spResearchProjectsViewByID(Nullable<int> researchProjectsID)
        {
            var researchProjectsIDParameter = researchProjectsID.HasValue ?
                new ObjectParameter("ResearchProjectsID", researchProjectsID) :
                new ObjectParameter("ResearchProjectsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spResearchProjectsViewByID_Result>("spResearchProjectsViewByID", researchProjectsIDParameter);
        }
    }
}
